generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Board {
  id        String   @id @default(cuid())
  title     String?
  userId    String
  columns   Column[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Column {
  id        String   @id @default(cuid())
  title     String
  order     Int
  boardId   String
  board     Board    @relation(fields: [boardId], references: [id])
  cards     Card[]   @relation("ColumnToCards")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Card {
  id        String   @id @default(cuid())
  content   String
  order     Int
  columnId  String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  column    Column   @relation("ColumnToCards", fields: [columnId], references: [id], onDelete: Cascade)

  @@index([columnId])
}

model GenNotes {
  id         String   @id @default(cuid())
  userId     String
  title      String
  content    String   @db.Text
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Course {
  id          String       @id @default(cuid())
  name        String
  color       String
  userId      String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  assignments Assignment[]

  @@index([userId])
}

model Assignment {
  id        String   @id @default(cuid())
  title     String
  dueDate   String
  type      String
  courseId  String
  userId    String
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
  @@index([userId])
}

model QuickNotes {
  id        String   @id @default(cuid())
  content   String   @db.Text
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

